// Code generated by protoc-gen-go. DO NOT EDIT.
// source: merchant.proto

/*
Package protos is a generated protocol buffer package.

It is generated from these files:
	merchant.proto
	merchant_common.proto
	shop.proto
	staff.proto

It has these top-level messages:
	SetStatusRequest
	SetStatusReply
	RegisterUserRequest
	RegisterUserReply
	ValidatePasswordRequest
	ValidatePasswordReply
	GetMerchantRequest
	GetMerchantReply
	GetMerchantListRequest
	GetMerchantListReply
	Merchant
	ModifyMerchantRequest
	ModifyMerchantReply
	RecordCodeRequest
	RecordCodeReply
	ModifyPasswordWithCodeRequest
	ModifyPasswordWithCodeReply
	ModifyPasswordRequest
	ModifyPasswordReply
	Error
	ShopInfo
	CreateShopRequest
	CreateShopReply
	GetShopListRequest
	GetShopListReply
	GetShopInfoRequest
	GetShopInfoReply
	ModifyShopInfoRequest
	ModifyShopReply
	CheckMobileAccessRequest
	CheckMobileAccessReply
	StaffInfo
	CreateStaffInfoRequest
	CreateStaffInfoReply
	GetStaffListRequest
	GetStaffListReply
	GetStaffInfoRequest
	GetStaffInfoReply
	ModifyStaffInfoRequest
	ModifyStaffInfoReply
	RemoveStaffRequest
	RemoveStaffReply
*/
package protos

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type MerchantStatus int32

const (
	MerchantStatus_MerchantStatusDefault MerchantStatus = 0
	MerchantStatus_MerchantStatusOpen    MerchantStatus = 1
	MerchantStatus_MerchantStatusClose   MerchantStatus = 2
)

var MerchantStatus_name = map[int32]string{
	0: "MerchantStatusDefault",
	1: "MerchantStatusOpen",
	2: "MerchantStatusClose",
}
var MerchantStatus_value = map[string]int32{
	"MerchantStatusDefault": 0,
	"MerchantStatusOpen":    1,
	"MerchantStatusClose":   2,
}

func (x MerchantStatus) String() string {
	return proto.EnumName(MerchantStatus_name, int32(x))
}
func (MerchantStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type SetStatusRequest struct {
	MerchantId uint64         `protobuf:"varint,1,opt,name=merchantId" json:"merchantId,omitempty"`
	Status     MerchantStatus `protobuf:"varint,2,opt,name=status,enum=merchant.pkg.rpc.protos.MerchantStatus" json:"status,omitempty"`
}

func (m *SetStatusRequest) Reset()                    { *m = SetStatusRequest{} }
func (m *SetStatusRequest) String() string            { return proto.CompactTextString(m) }
func (*SetStatusRequest) ProtoMessage()               {}
func (*SetStatusRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *SetStatusRequest) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

func (m *SetStatusRequest) GetStatus() MerchantStatus {
	if m != nil {
		return m.Status
	}
	return MerchantStatus_MerchantStatusDefault
}

type SetStatusReply struct {
	Err       *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	IsSuccess bool   `protobuf:"varint,2,opt,name=isSuccess" json:"isSuccess,omitempty"`
}

func (m *SetStatusReply) Reset()                    { *m = SetStatusReply{} }
func (m *SetStatusReply) String() string            { return proto.CompactTextString(m) }
func (*SetStatusReply) ProtoMessage()               {}
func (*SetStatusReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *SetStatusReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *SetStatusReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

type RegisterUserRequest struct {
	Mobile           string         `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
	Password         string         `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Name             string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Area             string         `protobuf:"bytes,4,opt,name=area" json:"area,omitempty"`
	ManagementCentre string         `protobuf:"bytes,5,opt,name=managementCentre" json:"managementCentre,omitempty"`
	NetworkStation   string         `protobuf:"bytes,6,opt,name=networkStation" json:"networkStation,omitempty"`
	Status           MerchantStatus `protobuf:"varint,7,opt,name=status,enum=merchant.pkg.rpc.protos.MerchantStatus" json:"status,omitempty"`
	IsRebate         bool           `protobuf:"varint,8,opt,name=isRebate" json:"isRebate,omitempty"`
}

func (m *RegisterUserRequest) Reset()                    { *m = RegisterUserRequest{} }
func (m *RegisterUserRequest) String() string            { return proto.CompactTextString(m) }
func (*RegisterUserRequest) ProtoMessage()               {}
func (*RegisterUserRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *RegisterUserRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *RegisterUserRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *RegisterUserRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *RegisterUserRequest) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *RegisterUserRequest) GetManagementCentre() string {
	if m != nil {
		return m.ManagementCentre
	}
	return ""
}

func (m *RegisterUserRequest) GetNetworkStation() string {
	if m != nil {
		return m.NetworkStation
	}
	return ""
}

func (m *RegisterUserRequest) GetStatus() MerchantStatus {
	if m != nil {
		return m.Status
	}
	return MerchantStatus_MerchantStatusDefault
}

func (m *RegisterUserRequest) GetIsRebate() bool {
	if m != nil {
		return m.IsRebate
	}
	return false
}

type RegisterUserReply struct {
	Err        *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	MerchantId uint64 `protobuf:"varint,2,opt,name=merchantId" json:"merchantId,omitempty"`
}

func (m *RegisterUserReply) Reset()                    { *m = RegisterUserReply{} }
func (m *RegisterUserReply) String() string            { return proto.CompactTextString(m) }
func (*RegisterUserReply) ProtoMessage()               {}
func (*RegisterUserReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *RegisterUserReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *RegisterUserReply) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

type ValidatePasswordRequest struct {
	Mobile   string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *ValidatePasswordRequest) Reset()                    { *m = ValidatePasswordRequest{} }
func (m *ValidatePasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ValidatePasswordRequest) ProtoMessage()               {}
func (*ValidatePasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *ValidatePasswordRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ValidatePasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ValidatePasswordReply struct {
	Err        *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Pass       bool   `protobuf:"varint,2,opt,name=pass" json:"pass,omitempty"`
	MerchantId uint64 `protobuf:"varint,3,opt,name=merchantId" json:"merchantId,omitempty"`
}

func (m *ValidatePasswordReply) Reset()                    { *m = ValidatePasswordReply{} }
func (m *ValidatePasswordReply) String() string            { return proto.CompactTextString(m) }
func (*ValidatePasswordReply) ProtoMessage()               {}
func (*ValidatePasswordReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *ValidatePasswordReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ValidatePasswordReply) GetPass() bool {
	if m != nil {
		return m.Pass
	}
	return false
}

func (m *ValidatePasswordReply) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

type GetMerchantRequest struct {
	MerchantId uint64 `protobuf:"varint,1,opt,name=merchantId" json:"merchantId,omitempty"`
}

func (m *GetMerchantRequest) Reset()                    { *m = GetMerchantRequest{} }
func (m *GetMerchantRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantRequest) ProtoMessage()               {}
func (*GetMerchantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *GetMerchantRequest) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

type GetMerchantReply struct {
	Merchant *Merchant `protobuf:"bytes,1,opt,name=merchant" json:"merchant,omitempty"`
	Err      *Error    `protobuf:"bytes,2,opt,name=err" json:"err,omitempty"`
}

func (m *GetMerchantReply) Reset()                    { *m = GetMerchantReply{} }
func (m *GetMerchantReply) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantReply) ProtoMessage()               {}
func (*GetMerchantReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *GetMerchantReply) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

func (m *GetMerchantReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

type GetMerchantListRequest struct {
	// 页码
	Page uint64 `protobuf:"varint,1,opt,name=page" json:"page,omitempty"`
	// 分页大小
	PageSize uint64 `protobuf:"varint,2,opt,name=pageSize" json:"pageSize,omitempty"`
	// 商户ID
	MerchantId uint64 `protobuf:"varint,3,opt,name=merchantId" json:"merchantId,omitempty"`
	// 手机号(模糊搜索)
	MobileFuzzySearch string `protobuf:"bytes,4,opt,name=mobileFuzzySearch" json:"mobileFuzzySearch,omitempty"`
	// 名称搜索（模糊搜索）
	NameFuzzySearch string `protobuf:"bytes,5,opt,name=nameFuzzySearch" json:"nameFuzzySearch,omitempty"`
	// 区域
	Area string `protobuf:"bytes,6,opt,name=area" json:"area,omitempty"`
	// 管理中心
	ManagementCentre string `protobuf:"bytes,7,opt,name=managementCentre" json:"managementCentre,omitempty"`
	// 网点(模糊搜索)
	NetworkStationFuzzySearch string `protobuf:"bytes,8,opt,name=networkStationFuzzySearch" json:"networkStationFuzzySearch,omitempty"`
}

func (m *GetMerchantListRequest) Reset()                    { *m = GetMerchantListRequest{} }
func (m *GetMerchantListRequest) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantListRequest) ProtoMessage()               {}
func (*GetMerchantListRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{8} }

func (m *GetMerchantListRequest) GetPage() uint64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetMerchantListRequest) GetPageSize() uint64 {
	if m != nil {
		return m.PageSize
	}
	return 0
}

func (m *GetMerchantListRequest) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

func (m *GetMerchantListRequest) GetMobileFuzzySearch() string {
	if m != nil {
		return m.MobileFuzzySearch
	}
	return ""
}

func (m *GetMerchantListRequest) GetNameFuzzySearch() string {
	if m != nil {
		return m.NameFuzzySearch
	}
	return ""
}

func (m *GetMerchantListRequest) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *GetMerchantListRequest) GetManagementCentre() string {
	if m != nil {
		return m.ManagementCentre
	}
	return ""
}

func (m *GetMerchantListRequest) GetNetworkStationFuzzySearch() string {
	if m != nil {
		return m.NetworkStationFuzzySearch
	}
	return ""
}

type GetMerchantListReply struct {
	Err          *Error      `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	MerchantList []*Merchant `protobuf:"bytes,2,rep,name=merchantList" json:"merchantList,omitempty"`
	Count        uint64      `protobuf:"varint,3,opt,name=count" json:"count,omitempty"`
}

func (m *GetMerchantListReply) Reset()                    { *m = GetMerchantListReply{} }
func (m *GetMerchantListReply) String() string            { return proto.CompactTextString(m) }
func (*GetMerchantListReply) ProtoMessage()               {}
func (*GetMerchantListReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{9} }

func (m *GetMerchantListReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *GetMerchantListReply) GetMerchantList() []*Merchant {
	if m != nil {
		return m.MerchantList
	}
	return nil
}

func (m *GetMerchantListReply) GetCount() uint64 {
	if m != nil {
		return m.Count
	}
	return 0
}

type Merchant struct {
	// 手机号
	Mobile string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
	// merchantId
	MerchantId uint64 `protobuf:"varint,2,opt,name=merchantId" json:"merchantId,omitempty"`
	// 名字
	Name string `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	// 区域
	Area string `protobuf:"bytes,4,opt,name=area" json:"area,omitempty"`
	// 管理中心
	ManagementCentre string `protobuf:"bytes,5,opt,name=managementCentre" json:"managementCentre,omitempty"`
	// 网点
	NetworkStation string `protobuf:"bytes,6,opt,name=networkStation" json:"networkStation,omitempty"`
	// 状态： 1 => 正常；2 => 禁用
	Status MerchantStatus `protobuf:"varint,7,opt,name=status,enum=merchant.pkg.rpc.protos.MerchantStatus" json:"status,omitempty"`
	// 是否返利
	IsRebate bool `protobuf:"varint,8,opt,name=isRebate" json:"isRebate,omitempty"`
}

func (m *Merchant) Reset()                    { *m = Merchant{} }
func (m *Merchant) String() string            { return proto.CompactTextString(m) }
func (*Merchant) ProtoMessage()               {}
func (*Merchant) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{10} }

func (m *Merchant) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *Merchant) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

func (m *Merchant) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Merchant) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *Merchant) GetManagementCentre() string {
	if m != nil {
		return m.ManagementCentre
	}
	return ""
}

func (m *Merchant) GetNetworkStation() string {
	if m != nil {
		return m.NetworkStation
	}
	return ""
}

func (m *Merchant) GetStatus() MerchantStatus {
	if m != nil {
		return m.Status
	}
	return MerchantStatus_MerchantStatusDefault
}

func (m *Merchant) GetIsRebate() bool {
	if m != nil {
		return m.IsRebate
	}
	return false
}

type ModifyMerchantRequest struct {
	Mobile           string         `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
	MerchantId       uint64         `protobuf:"varint,2,opt,name=merchantId" json:"merchantId,omitempty"`
	Name             string         `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	Area             string         `protobuf:"bytes,4,opt,name=area" json:"area,omitempty"`
	ManagementCentre string         `protobuf:"bytes,5,opt,name=managementCentre" json:"managementCentre,omitempty"`
	NetworkStation   string         `protobuf:"bytes,6,opt,name=networkStation" json:"networkStation,omitempty"`
	Status           MerchantStatus `protobuf:"varint,7,opt,name=status,enum=merchant.pkg.rpc.protos.MerchantStatus" json:"status,omitempty"`
	IsRebate         bool           `protobuf:"varint,8,opt,name=isRebate" json:"isRebate,omitempty"`
	Password         string         `protobuf:"bytes,9,opt,name=password" json:"password,omitempty"`
}

func (m *ModifyMerchantRequest) Reset()                    { *m = ModifyMerchantRequest{} }
func (m *ModifyMerchantRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyMerchantRequest) ProtoMessage()               {}
func (*ModifyMerchantRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{11} }

func (m *ModifyMerchantRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ModifyMerchantRequest) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

func (m *ModifyMerchantRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ModifyMerchantRequest) GetArea() string {
	if m != nil {
		return m.Area
	}
	return ""
}

func (m *ModifyMerchantRequest) GetManagementCentre() string {
	if m != nil {
		return m.ManagementCentre
	}
	return ""
}

func (m *ModifyMerchantRequest) GetNetworkStation() string {
	if m != nil {
		return m.NetworkStation
	}
	return ""
}

func (m *ModifyMerchantRequest) GetStatus() MerchantStatus {
	if m != nil {
		return m.Status
	}
	return MerchantStatus_MerchantStatusDefault
}

func (m *ModifyMerchantRequest) GetIsRebate() bool {
	if m != nil {
		return m.IsRebate
	}
	return false
}

func (m *ModifyMerchantRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ModifyMerchantReply struct {
	Err      *Error    `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Merchant *Merchant `protobuf:"bytes,2,opt,name=merchant" json:"merchant,omitempty"`
}

func (m *ModifyMerchantReply) Reset()                    { *m = ModifyMerchantReply{} }
func (m *ModifyMerchantReply) String() string            { return proto.CompactTextString(m) }
func (*ModifyMerchantReply) ProtoMessage()               {}
func (*ModifyMerchantReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{12} }

func (m *ModifyMerchantReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ModifyMerchantReply) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

type RecordCodeRequest struct {
	Mobile    string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
	Code      string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	ExpiredAt string `protobuf:"bytes,3,opt,name=expiredAt" json:"expiredAt,omitempty"`
}

func (m *RecordCodeRequest) Reset()                    { *m = RecordCodeRequest{} }
func (m *RecordCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*RecordCodeRequest) ProtoMessage()               {}
func (*RecordCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{13} }

func (m *RecordCodeRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *RecordCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *RecordCodeRequest) GetExpiredAt() string {
	if m != nil {
		return m.ExpiredAt
	}
	return ""
}

type RecordCodeReply struct {
	Err      *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	RecordId uint64 `protobuf:"varint,2,opt,name=RecordId" json:"RecordId,omitempty"`
}

func (m *RecordCodeReply) Reset()                    { *m = RecordCodeReply{} }
func (m *RecordCodeReply) String() string            { return proto.CompactTextString(m) }
func (*RecordCodeReply) ProtoMessage()               {}
func (*RecordCodeReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{14} }

func (m *RecordCodeReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *RecordCodeReply) GetRecordId() uint64 {
	if m != nil {
		return m.RecordId
	}
	return 0
}

type ModifyPasswordWithCodeRequest struct {
	Mobile   string `protobuf:"bytes,1,opt,name=mobile" json:"mobile,omitempty"`
	Code     string `protobuf:"bytes,2,opt,name=code" json:"code,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password" json:"password,omitempty"`
}

func (m *ModifyPasswordWithCodeRequest) Reset()                    { *m = ModifyPasswordWithCodeRequest{} }
func (m *ModifyPasswordWithCodeRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyPasswordWithCodeRequest) ProtoMessage()               {}
func (*ModifyPasswordWithCodeRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{15} }

func (m *ModifyPasswordWithCodeRequest) GetMobile() string {
	if m != nil {
		return m.Mobile
	}
	return ""
}

func (m *ModifyPasswordWithCodeRequest) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *ModifyPasswordWithCodeRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ModifyPasswordWithCodeReply struct {
	Err       *Error `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	IsSuccess bool   `protobuf:"varint,2,opt,name=isSuccess" json:"isSuccess,omitempty"`
}

func (m *ModifyPasswordWithCodeReply) Reset()                    { *m = ModifyPasswordWithCodeReply{} }
func (m *ModifyPasswordWithCodeReply) String() string            { return proto.CompactTextString(m) }
func (*ModifyPasswordWithCodeReply) ProtoMessage()               {}
func (*ModifyPasswordWithCodeReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{16} }

func (m *ModifyPasswordWithCodeReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ModifyPasswordWithCodeReply) GetIsSuccess() bool {
	if m != nil {
		return m.IsSuccess
	}
	return false
}

type ModifyPasswordRequest struct {
	MerchantId uint64 `protobuf:"varint,1,opt,name=merchantId" json:"merchantId,omitempty"`
	Password   string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
}

func (m *ModifyPasswordRequest) Reset()                    { *m = ModifyPasswordRequest{} }
func (m *ModifyPasswordRequest) String() string            { return proto.CompactTextString(m) }
func (*ModifyPasswordRequest) ProtoMessage()               {}
func (*ModifyPasswordRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{17} }

func (m *ModifyPasswordRequest) GetMerchantId() uint64 {
	if m != nil {
		return m.MerchantId
	}
	return 0
}

func (m *ModifyPasswordRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type ModifyPasswordReply struct {
	Err      *Error    `protobuf:"bytes,1,opt,name=err" json:"err,omitempty"`
	Merchant *Merchant `protobuf:"bytes,2,opt,name=merchant" json:"merchant,omitempty"`
}

func (m *ModifyPasswordReply) Reset()                    { *m = ModifyPasswordReply{} }
func (m *ModifyPasswordReply) String() string            { return proto.CompactTextString(m) }
func (*ModifyPasswordReply) ProtoMessage()               {}
func (*ModifyPasswordReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{18} }

func (m *ModifyPasswordReply) GetErr() *Error {
	if m != nil {
		return m.Err
	}
	return nil
}

func (m *ModifyPasswordReply) GetMerchant() *Merchant {
	if m != nil {
		return m.Merchant
	}
	return nil
}

func init() {
	proto.RegisterType((*SetStatusRequest)(nil), "merchant.pkg.rpc.protos.SetStatusRequest")
	proto.RegisterType((*SetStatusReply)(nil), "merchant.pkg.rpc.protos.SetStatusReply")
	proto.RegisterType((*RegisterUserRequest)(nil), "merchant.pkg.rpc.protos.RegisterUserRequest")
	proto.RegisterType((*RegisterUserReply)(nil), "merchant.pkg.rpc.protos.RegisterUserReply")
	proto.RegisterType((*ValidatePasswordRequest)(nil), "merchant.pkg.rpc.protos.ValidatePasswordRequest")
	proto.RegisterType((*ValidatePasswordReply)(nil), "merchant.pkg.rpc.protos.ValidatePasswordReply")
	proto.RegisterType((*GetMerchantRequest)(nil), "merchant.pkg.rpc.protos.GetMerchantRequest")
	proto.RegisterType((*GetMerchantReply)(nil), "merchant.pkg.rpc.protos.GetMerchantReply")
	proto.RegisterType((*GetMerchantListRequest)(nil), "merchant.pkg.rpc.protos.GetMerchantListRequest")
	proto.RegisterType((*GetMerchantListReply)(nil), "merchant.pkg.rpc.protos.GetMerchantListReply")
	proto.RegisterType((*Merchant)(nil), "merchant.pkg.rpc.protos.Merchant")
	proto.RegisterType((*ModifyMerchantRequest)(nil), "merchant.pkg.rpc.protos.ModifyMerchantRequest")
	proto.RegisterType((*ModifyMerchantReply)(nil), "merchant.pkg.rpc.protos.ModifyMerchantReply")
	proto.RegisterType((*RecordCodeRequest)(nil), "merchant.pkg.rpc.protos.RecordCodeRequest")
	proto.RegisterType((*RecordCodeReply)(nil), "merchant.pkg.rpc.protos.RecordCodeReply")
	proto.RegisterType((*ModifyPasswordWithCodeRequest)(nil), "merchant.pkg.rpc.protos.ModifyPasswordWithCodeRequest")
	proto.RegisterType((*ModifyPasswordWithCodeReply)(nil), "merchant.pkg.rpc.protos.ModifyPasswordWithCodeReply")
	proto.RegisterType((*ModifyPasswordRequest)(nil), "merchant.pkg.rpc.protos.ModifyPasswordRequest")
	proto.RegisterType((*ModifyPasswordReply)(nil), "merchant.pkg.rpc.protos.ModifyPasswordReply")
	proto.RegisterEnum("merchant.pkg.rpc.protos.MerchantStatus", MerchantStatus_name, MerchantStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for MerchantController service

type MerchantControllerClient interface {
	// 注册商家用户
	RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserReply, error)
	// 判断商家用户密码是否正确
	ValidatePassword(ctx context.Context, in *ValidatePasswordRequest, opts ...grpc.CallOption) (*ValidatePasswordReply, error)
	// 获取商家信息
	GetMerchant(ctx context.Context, in *GetMerchantRequest, opts ...grpc.CallOption) (*GetMerchantReply, error)
	// 获取商家列表
	GetMerchantList(ctx context.Context, in *GetMerchantListRequest, opts ...grpc.CallOption) (*GetMerchantListReply, error)
	// 修改商家信息
	ModifyMerchant(ctx context.Context, in *ModifyMerchantRequest, opts ...grpc.CallOption) (*ModifyMerchantReply, error)
	// 记录验证码
	RecordCode(ctx context.Context, in *RecordCodeRequest, opts ...grpc.CallOption) (*RecordCodeReply, error)
	// 修改密码[带校验密码]
	ModifyPasswordWithCode(ctx context.Context, in *ModifyPasswordWithCodeRequest, opts ...grpc.CallOption) (*ModifyPasswordWithCodeReply, error)
	// 修改密码
	ModifyPassword(ctx context.Context, in *ModifyPasswordRequest, opts ...grpc.CallOption) (*ModifyPasswordReply, error)
	// 修改状态
	SetStatus(ctx context.Context, in *SetStatusRequest, opts ...grpc.CallOption) (*SetStatusReply, error)
}

type merchantControllerClient struct {
	cc *grpc.ClientConn
}

func NewMerchantControllerClient(cc *grpc.ClientConn) MerchantControllerClient {
	return &merchantControllerClient{cc}
}

func (c *merchantControllerClient) RegisterUser(ctx context.Context, in *RegisterUserRequest, opts ...grpc.CallOption) (*RegisterUserReply, error) {
	out := new(RegisterUserReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/RegisterUser", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) ValidatePassword(ctx context.Context, in *ValidatePasswordRequest, opts ...grpc.CallOption) (*ValidatePasswordReply, error) {
	out := new(ValidatePasswordReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/ValidatePassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) GetMerchant(ctx context.Context, in *GetMerchantRequest, opts ...grpc.CallOption) (*GetMerchantReply, error) {
	out := new(GetMerchantReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/GetMerchant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) GetMerchantList(ctx context.Context, in *GetMerchantListRequest, opts ...grpc.CallOption) (*GetMerchantListReply, error) {
	out := new(GetMerchantListReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/GetMerchantList", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) ModifyMerchant(ctx context.Context, in *ModifyMerchantRequest, opts ...grpc.CallOption) (*ModifyMerchantReply, error) {
	out := new(ModifyMerchantReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/ModifyMerchant", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) RecordCode(ctx context.Context, in *RecordCodeRequest, opts ...grpc.CallOption) (*RecordCodeReply, error) {
	out := new(RecordCodeReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/RecordCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) ModifyPasswordWithCode(ctx context.Context, in *ModifyPasswordWithCodeRequest, opts ...grpc.CallOption) (*ModifyPasswordWithCodeReply, error) {
	out := new(ModifyPasswordWithCodeReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/ModifyPasswordWithCode", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) ModifyPassword(ctx context.Context, in *ModifyPasswordRequest, opts ...grpc.CallOption) (*ModifyPasswordReply, error) {
	out := new(ModifyPasswordReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/ModifyPassword", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *merchantControllerClient) SetStatus(ctx context.Context, in *SetStatusRequest, opts ...grpc.CallOption) (*SetStatusReply, error) {
	out := new(SetStatusReply)
	err := grpc.Invoke(ctx, "/merchant.pkg.rpc.protos.MerchantController/SetStatus", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for MerchantController service

type MerchantControllerServer interface {
	// 注册商家用户
	RegisterUser(context.Context, *RegisterUserRequest) (*RegisterUserReply, error)
	// 判断商家用户密码是否正确
	ValidatePassword(context.Context, *ValidatePasswordRequest) (*ValidatePasswordReply, error)
	// 获取商家信息
	GetMerchant(context.Context, *GetMerchantRequest) (*GetMerchantReply, error)
	// 获取商家列表
	GetMerchantList(context.Context, *GetMerchantListRequest) (*GetMerchantListReply, error)
	// 修改商家信息
	ModifyMerchant(context.Context, *ModifyMerchantRequest) (*ModifyMerchantReply, error)
	// 记录验证码
	RecordCode(context.Context, *RecordCodeRequest) (*RecordCodeReply, error)
	// 修改密码[带校验密码]
	ModifyPasswordWithCode(context.Context, *ModifyPasswordWithCodeRequest) (*ModifyPasswordWithCodeReply, error)
	// 修改密码
	ModifyPassword(context.Context, *ModifyPasswordRequest) (*ModifyPasswordReply, error)
	// 修改状态
	SetStatus(context.Context, *SetStatusRequest) (*SetStatusReply, error)
}

func RegisterMerchantControllerServer(s *grpc.Server, srv MerchantControllerServer) {
	s.RegisterService(&_MerchantController_serviceDesc, srv)
}

func _MerchantController_RegisterUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RegisterUserRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).RegisterUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/RegisterUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).RegisterUser(ctx, req.(*RegisterUserRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_ValidatePassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ValidatePasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).ValidatePassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/ValidatePassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).ValidatePassword(ctx, req.(*ValidatePasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_GetMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerchantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).GetMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/GetMerchant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).GetMerchant(ctx, req.(*GetMerchantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_GetMerchantList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetMerchantListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).GetMerchantList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/GetMerchantList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).GetMerchantList(ctx, req.(*GetMerchantListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_ModifyMerchant_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyMerchantRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).ModifyMerchant(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/ModifyMerchant",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).ModifyMerchant(ctx, req.(*ModifyMerchantRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_RecordCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RecordCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).RecordCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/RecordCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).RecordCode(ctx, req.(*RecordCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_ModifyPasswordWithCode_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyPasswordWithCodeRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).ModifyPasswordWithCode(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/ModifyPasswordWithCode",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).ModifyPasswordWithCode(ctx, req.(*ModifyPasswordWithCodeRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_ModifyPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ModifyPasswordRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).ModifyPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/ModifyPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).ModifyPassword(ctx, req.(*ModifyPasswordRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _MerchantController_SetStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SetStatusRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(MerchantControllerServer).SetStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/merchant.pkg.rpc.protos.MerchantController/SetStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(MerchantControllerServer).SetStatus(ctx, req.(*SetStatusRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _MerchantController_serviceDesc = grpc.ServiceDesc{
	ServiceName: "merchant.pkg.rpc.protos.MerchantController",
	HandlerType: (*MerchantControllerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "RegisterUser",
			Handler:    _MerchantController_RegisterUser_Handler,
		},
		{
			MethodName: "ValidatePassword",
			Handler:    _MerchantController_ValidatePassword_Handler,
		},
		{
			MethodName: "GetMerchant",
			Handler:    _MerchantController_GetMerchant_Handler,
		},
		{
			MethodName: "GetMerchantList",
			Handler:    _MerchantController_GetMerchantList_Handler,
		},
		{
			MethodName: "ModifyMerchant",
			Handler:    _MerchantController_ModifyMerchant_Handler,
		},
		{
			MethodName: "RecordCode",
			Handler:    _MerchantController_RecordCode_Handler,
		},
		{
			MethodName: "ModifyPasswordWithCode",
			Handler:    _MerchantController_ModifyPasswordWithCode_Handler,
		},
		{
			MethodName: "ModifyPassword",
			Handler:    _MerchantController_ModifyPassword_Handler,
		},
		{
			MethodName: "SetStatus",
			Handler:    _MerchantController_SetStatus_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "merchant.proto",
}

func init() { proto.RegisterFile("merchant.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 903 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xec, 0x57, 0x4f, 0x6f, 0xeb, 0x44,
	0x10, 0x7f, 0x76, 0xf2, 0xf2, 0x9c, 0x79, 0x55, 0x9a, 0x6e, 0x9b, 0xd4, 0x35, 0x50, 0x15, 0x1f,
	0x68, 0x28, 0x25, 0x54, 0xa5, 0xe2, 0x04, 0x42, 0x10, 0x0a, 0x42, 0xa2, 0x02, 0x39, 0x02, 0x24,
	0x04, 0x2a, 0xae, 0x3d, 0x4d, 0x4d, 0x6d, 0xaf, 0x59, 0x6f, 0x28, 0xa9, 0xc4, 0x09, 0x09, 0x71,
	0xe2, 0x0b, 0x70, 0x43, 0xe2, 0x6b, 0x70, 0xe2, 0x83, 0x21, 0x7b, 0x6d, 0xc7, 0x76, 0xea, 0xc6,
	0x4d, 0xc5, 0x05, 0x71, 0x8a, 0x77, 0x76, 0xfe, 0xec, 0xfc, 0xe6, 0x6f, 0xa0, 0xe3, 0x21, 0xb3,
	0xae, 0x4c, 0x9f, 0x0f, 0x03, 0x46, 0x39, 0x25, 0xdb, 0xf3, 0xf3, 0xf5, 0x64, 0xc8, 0x02, 0x4b,
	0xd0, 0x43, 0xad, 0x97, 0x5e, 0x9c, 0x5b, 0xd4, 0xf3, 0xa8, 0x2f, 0xe8, 0x7a, 0x08, 0xdd, 0x31,
	0xf2, 0x31, 0x37, 0xf9, 0x34, 0x34, 0xf0, 0xfb, 0x29, 0x86, 0x9c, 0xec, 0x02, 0xa4, 0xcc, 0x1f,
	0xdb, 0xaa, 0xb4, 0x27, 0x0d, 0x9a, 0x46, 0x8e, 0x42, 0xde, 0x85, 0x56, 0x18, 0x0b, 0xa8, 0xf2,
	0x9e, 0x34, 0xe8, 0x1c, 0xef, 0x0f, 0x2b, 0x8c, 0x0e, 0xcf, 0x12, 0x7a, 0xa2, 0x3f, 0x11, 0xd3,
	0xbf, 0x85, 0x4e, 0xce, 0x68, 0xe0, 0xce, 0xc8, 0x11, 0x34, 0x90, 0xb1, 0xd8, 0xd6, 0xf3, 0xe3,
	0xdd, 0x4a, 0x7d, 0xa7, 0x8c, 0x51, 0x66, 0x44, 0xac, 0xe4, 0x45, 0x68, 0x3b, 0xe1, 0x78, 0x6a,
	0x59, 0x18, 0x8a, 0x77, 0x28, 0xc6, 0x9c, 0xa0, 0xff, 0x21, 0xc3, 0xa6, 0x81, 0x13, 0x27, 0xe4,
	0xc8, 0x3e, 0x0f, 0x91, 0xa5, 0xae, 0xf5, 0xa1, 0xe5, 0xd1, 0x0b, 0xc7, 0xc5, 0xd8, 0x54, 0xdb,
	0x48, 0x4e, 0x44, 0x03, 0x25, 0x30, 0xc3, 0xf0, 0x86, 0x32, 0x3b, 0x56, 0xd6, 0x36, 0xb2, 0x33,
	0x21, 0xd0, 0xf4, 0x4d, 0x0f, 0xd5, 0x46, 0x4c, 0x8f, 0xbf, 0x23, 0x9a, 0xc9, 0xd0, 0x54, 0x9b,
	0x82, 0x16, 0x7d, 0x93, 0x03, 0xe8, 0x7a, 0xa6, 0x6f, 0x4e, 0xd0, 0x43, 0x9f, 0x8f, 0xd0, 0xe7,
	0x0c, 0xd5, 0xa7, 0xf1, 0xfd, 0x02, 0x9d, 0xbc, 0x02, 0x1d, 0x1f, 0xf9, 0x0d, 0x65, 0xd7, 0x11,
	0x0a, 0x0e, 0xf5, 0xd5, 0x56, 0xcc, 0x59, 0xa2, 0xe6, 0xa0, 0x7e, 0xb6, 0x12, 0xd4, 0x91, 0x63,
	0x4e, 0x68, 0xe0, 0x85, 0xc9, 0x51, 0x55, 0x62, 0x94, 0xb2, 0xb3, 0x8e, 0xb0, 0x51, 0xc4, 0x68,
	0xb5, 0x48, 0x14, 0xd3, 0x45, 0x2e, 0xa7, 0x8b, 0x7e, 0x06, 0xdb, 0x5f, 0x98, 0xae, 0x63, 0x9b,
	0x1c, 0x3f, 0x4b, 0x30, 0x7d, 0x44, 0x38, 0xf4, 0x9f, 0xa0, 0xb7, 0xa8, 0x6e, 0xb5, 0x97, 0x13,
	0x68, 0x46, 0x6a, 0x93, 0xf4, 0x89, 0xbf, 0x4b, 0xde, 0x34, 0x16, 0xbc, 0x39, 0x01, 0xf2, 0x11,
	0xf2, 0x14, 0xed, 0x9a, 0x25, 0xa3, 0xff, 0x2c, 0x41, 0xb7, 0x20, 0x16, 0x3d, 0xf8, 0x1d, 0x50,
	0x52, 0x96, 0xe4, 0xd5, 0x2f, 0x2f, 0x0d, 0xaf, 0x91, 0x89, 0xa4, 0xfe, 0xca, 0xb5, 0xfd, 0xd5,
	0xff, 0x92, 0xa1, 0x9f, 0x7b, 0xc5, 0x27, 0x4e, 0x98, 0x39, 0x10, 0x43, 0x31, 0xc1, 0xe4, 0xe9,
	0xf1, 0xb7, 0x88, 0xc2, 0x04, 0xc7, 0xce, 0x2d, 0x26, 0x61, 0xcd, 0xce, 0xcb, 0x60, 0x22, 0x87,
	0xb0, 0x21, 0x62, 0xf9, 0xe1, 0xf4, 0xf6, 0x76, 0x36, 0x46, 0x93, 0x59, 0x57, 0x49, 0xb5, 0x2c,
	0x5e, 0x90, 0x01, 0xac, 0x47, 0x65, 0x95, 0xe7, 0x15, 0x95, 0x53, 0x26, 0x67, 0x85, 0xd7, 0x5a,
	0x52, 0x78, 0xcf, 0x2a, 0x0a, 0xef, 0x6d, 0xd8, 0x29, 0x96, 0x58, 0xde, 0xa6, 0x12, 0x0b, 0x55,
	0x33, 0xe8, 0x7f, 0x4a, 0xb0, 0xb5, 0x00, 0xe0, 0x6a, 0xb9, 0x77, 0x0a, 0x6b, 0x5e, 0x4e, 0x8d,
	0x2a, 0xef, 0x35, 0xea, 0x25, 0x40, 0x41, 0x8c, 0x6c, 0xc1, 0x53, 0x8b, 0x4e, 0x7d, 0x9e, 0x84,
	0x40, 0x1c, 0xf4, 0xdf, 0x65, 0x50, 0x52, 0x81, 0xca, 0x22, 0x5b, 0x52, 0xb7, 0xff, 0xdd, 0xbe,
	0xf7, 0xb7, 0x0c, 0xbd, 0x33, 0x6a, 0x3b, 0x97, 0xb3, 0x72, 0x19, 0xff, 0x0f, 0x55, 0x11, 0xaa,
	0x42, 0x23, 0x6e, 0x97, 0x1a, 0xf1, 0x2f, 0x12, 0x6c, 0x96, 0x61, 0x5c, 0xad, 0x16, 0xf2, 0x8d,
	0x50, 0x7e, 0x70, 0x23, 0xd4, 0xbf, 0x89, 0xe6, 0x98, 0x45, 0x99, 0x3d, 0xa2, 0x36, 0x2e, 0x0b,
	0x25, 0x81, 0xa6, 0x45, 0x6d, 0x4c, 0xc6, 0x4a, 0xfc, 0x1d, 0xed, 0x12, 0xf8, 0x63, 0xe0, 0x30,
	0xb4, 0xdf, 0xe3, 0x49, 0x0c, 0xe7, 0x04, 0xfd, 0x1c, 0xd6, 0xf3, 0xea, 0x57, 0x73, 0x51, 0x03,
	0x45, 0x28, 0xc9, 0xf2, 0x27, 0x3b, 0xeb, 0x13, 0x78, 0x49, 0xe0, 0x98, 0xce, 0xb3, 0x2f, 0x1d,
	0x7e, 0xb5, 0xaa, 0x2f, 0xf9, 0x88, 0x35, 0x4a, 0x11, 0xf3, 0xe0, 0x85, 0x2a, 0x43, 0xff, 0xc6,
	0x12, 0x36, 0x4e, 0xcb, 0xac, 0x3c, 0xf6, 0x97, 0x2d, 0x98, 0xf7, 0x8d, 0xff, 0x79, 0xd6, 0x3d,
	0x76, 0xfa, 0x3f, 0x2e, 0xeb, 0x0e, 0xbe, 0x86, 0x4e, 0xb1, 0xa0, 0xc8, 0x0e, 0xf4, 0x8a, 0x94,
	0x0f, 0xf0, 0xd2, 0x9c, 0xba, 0xbc, 0xfb, 0x84, 0xf4, 0x81, 0x14, 0xaf, 0x3e, 0x0d, 0xd0, 0xef,
	0x4a, 0x64, 0x1b, 0x36, 0x8b, 0xf4, 0x91, 0x4b, 0x43, 0xec, 0xca, 0xc7, 0xbf, 0x29, 0x73, 0x89,
	0x11, 0xf5, 0x39, 0xa3, 0xae, 0x8b, 0x8c, 0x7c, 0x07, 0x6b, 0xf9, 0x95, 0x8d, 0x1c, 0x56, 0xbe,
	0xf8, 0x8e, 0xed, 0x57, 0x3b, 0xa8, 0xc9, 0x1d, 0xb8, 0x33, 0xfd, 0x09, 0xf9, 0x01, 0xba, 0xe5,
	0x45, 0x8b, 0x1c, 0x55, 0x6a, 0xa8, 0x58, 0xf1, 0xb4, 0xe1, 0x03, 0x24, 0x84, 0xdd, 0x09, 0x3c,
	0xcf, 0xcd, 0x58, 0xf2, 0x5a, 0xa5, 0x82, 0xc5, 0x3d, 0x4c, 0x7b, 0xb5, 0x1e, 0xb3, 0x30, 0x14,
	0xc2, 0x7a, 0x69, 0x98, 0x93, 0x37, 0xea, 0xc8, 0xe7, 0xf6, 0x26, 0xed, 0xf5, 0xfa, 0x02, 0xc2,
	0x68, 0x00, 0x9d, 0x62, 0xd3, 0x24, 0xd5, 0x08, 0xdd, 0x39, 0xa4, 0xb4, 0xc3, 0xda, 0xfc, 0xc2,
	0xa2, 0x0d, 0x30, 0xef, 0x5f, 0xe4, 0xbe, 0x1c, 0x28, 0xf5, 0x50, 0x6d, 0x50, 0x8b, 0x57, 0x58,
	0xf9, 0x55, 0x82, 0xfe, 0xdd, 0xcd, 0x85, 0xbc, 0xb5, 0xe4, 0xc1, 0x15, 0x6d, 0x4f, 0x3b, 0x79,
	0xb0, 0x5c, 0x09, 0xe2, 0x2c, 0x6d, 0x87, 0x35, 0x35, 0xd5, 0x85, 0xb8, 0x9c, 0xb2, 0x26, 0xb4,
	0xb3, 0x3f, 0xb4, 0xa4, 0x3a, 0x07, 0xcb, 0xff, 0xb4, 0xb5, 0xfd, 0x3a, 0xac, 0xb1, 0x89, 0xf7,
	0x95, 0xaf, 0x5a, 0xe2, 0xea, 0x42, 0xfc, 0xbe, 0xf9, 0x4f, 0x00, 0x00, 0x00, 0xff, 0xff, 0x02,
	0xfd, 0x81, 0x23, 0xfb, 0x0f, 0x00, 0x00,
}
